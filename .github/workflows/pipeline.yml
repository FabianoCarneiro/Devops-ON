name: pipeline

on:
  push:
  workflow_dispatch:
jobs:
  unit-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
      
    - run: mvn test  
    - name: Generate JaCoCo Badge
      id: jacoco
      uses: cicirello/jacoco-badge-generator@v2.0.1
    - name: Log coverage percentage
      run: |
        echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
        echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"    
    - name: Upload JaCoCo coverage report
      uses: actions/upload-artifact@v4.4.0
      with:
        name: jacoco-report
        path: target/site/jacoco
        
  code-analisys:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 17
        
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
        
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_AUTOGLASS }}
      run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=devopsfiap_devopsimpacta
       
  build: 
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml      
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: target/
    - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
      uses: actions/upload-artifact@v4.4.0
      with:
        #Set artifact name
        name: artifact
        #From this path
        path: ./target/demo-0.0.2.7-SNAPSHOT.jar
    
    - name: Package
      run: mvn package  
         
  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*.jar'
      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
          
  deploy-STG:
    runs-on: ubuntu-latest
    needs: publish
    
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy 
        shell: bash
        run: |
          echo "Deploy STG"
  
  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG
      
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'
  
  testeIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy 
        shell: bash
        run: |
          sh 'src/main/scripts/testeIntegrado.sh'          
          
    
    
